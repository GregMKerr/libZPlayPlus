Summary:
  Check if stream data is free.

Parameters:
  sMemNewData - Pointer to memory block.
  This must be one of values added with <LINK libZPlayCpp::ZPlay::PushDataToStream, PushDataToStream> or <LINK libZPlayCpp::zplay_PushDataToStream, zplay_PushDataToStream>.

Return Value List:
  1: <c>sMemNewData</c> isn't in stream anymore, you can destroy this data.
  0: <c>sMemNewData</c> is still in stream, don't destroy this data yet.

Remarks:
When you push memory block to <b>non buffered</b> stream with <LINK libZPlayCpp::ZPlay::PushDataToStream, PushDataToStream> or <LINK libZPlayCpp::zplay_PushDataToStream, zplay_PushDataToStream> you need to keep this data into memory
because class is using this data.
With this function you can check is specified buffer (pointer) is in stream queue.
If specified buffer is free, you can destroy this data, free memory ...

See Also:
<LINK libZPlayCpp::ZPlay::OpenStream, OpenStream>,
<LINK libZPlayCpp::ZPlay::PushDataToStream, PushDataToStream>,
<LINK libZPlayCpp::ZPlay::GetDynamicStreamLoad, GetDynamicStreamLoad>

<LINK libZPlayCpp::zplay_OpenStream, zplay_OpenStream>,
<LINK libZPlayCpp::zplay_PushDataToStream, zplay_PushDataToStream>,
<LINK libZPlayCpp::zplay_GetDynamicStreamLoad, zplay_GetDynamicStreamLoad>


<EXAMPLE>
<b><LINK ZPLAYINTERFACE, ZPlay C++ Class interface></b>
<CODE lang="c++">
instance->PushDataToStream(tmp, 8000); // push data to stream
if(instance->IsStreamDataFree(tmp)) // check if this data is still in stream
  free(tmp);
</CODE>

<b><LINK CSTYLEINTERFACE, C Style interface></b>
<CODE lang="c++">
zplay_PushDataToStream(instance, tmp, 8000); // push data to stream
if(zplay_IsStreamDataFree(instance, tmp)) // check if this data is still in stream
  free(tmp);
</CODE>
</EXAMPLE>
